on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
       - "*"
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - release/*

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer:v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          composer install
          git add vendor -f
          stashName=`git stash create`
          git archive --prefix=proview/ -o proview.zip $stashName
          git rm --cache -r vendor
      - name: Create Release
        if: github.event_name != 'pull_request'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}-local-proview
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: github.event_name != 'pull_request'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./proview.zip
          asset_name: proview.zip
          asset_content_type: application/zip
